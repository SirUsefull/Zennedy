

 Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua'))()




local Window = Rayfield:CreateWindow({
    Name = "Climb Rocks to VIP Obby | Zennedy",
    LoadingTitle = "loading...",
    LoadingSubtitle = "by Lui o lghd#0001",
 })


 local MainTab = Window:CreateTab("Main") 

 local CreditsTab = Window:CreateTab("Credits") 




 local MainSec = MainTab:CreateSection("Climb Rocks to VIP Obby" ,true)




 local CompleteButton = MainTab:CreateButton({
    Name = "Complete that shit",
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(76.91856384277344, 293.5809631347656, 369.9549255371094)
        wait(.2)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(76.8631591796875, 516.2808227539062, 320.29266357421875)
        wait(.2)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(79.8809585571289, 741.6810913085938, 361.7886047363281)
        wait(.2)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(115.83256530761719, 1270.0806884765625, 345.2504577636719)    
    end,
 })

 local SetStageInput = MainTab:CreateInput({
    Name = "Set Stage",
    Info = "Set the stage", -- Speaks for itself, Remove if none.
    PlaceholderText = "Type a number dumbass",
    NumbersOnly = true, -- If the user can only type numbers. Remove if none.
    CharacterLimit = 9, --max character limit. Remove if none.
    OnEnter = true, -- Will callback only if the user pressed ENTER while the box is focused.
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        game:GetService("Players").LocalPlayer.leaderstats.Stage.Value = Text
    end,
 })



 local RandomStages = MainTab:CreateToggle({
    Name = "Random Stages",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)

        RandomStages = Value

        coroutine.wrap(function()
            while RandomStages == true do
            local s = math.random(1, 10000)
            game:GetService("Players").LocalPlayer.leaderstats.Stage.Value = s
            wait()
            end 
            end)()

            coroutine.wrap(function()
                if RandomStages == false  then 
                    wait()
                    game:GetService("Players").LocalPlayer.leaderstats.Stage.Value = 0
                end
            end)()
    end,
 })


 local RandomHights = MainTab:CreateToggle({
    Name = "Random Heights",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
       

            RandomHeights = Value

            game:GetService("Players").LocalPlayer.PlayerGui.Overlay.HeightIndicator.TextLabel.LocalScript.Disabled = true
        coroutine.wrap(function()
            while RandomHeights == true  do
            wait()
            local s = tostring(math.random(1, 10000))
            game:GetService("Players").LocalPlayer.PlayerGui.Overlay.HeightIndicator.TextLabel.Text = "Height: "..s
            end 
            end)()

            coroutine.wrap(function()
                if RandomHeights == false  then 
                    wait()
                    game:GetService("Players").LocalPlayer.PlayerGui.Overlay.HeightIndicator.TextLabel.Text = "Height: ur pp is small :3"
                end
            end)()
    end,
 })


 local DelteShitBtn = MainTab:CreateButton({
    Name = "Delete the shitty scammy ui stuff",
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)

        if not  game:GetService("Players").LocalPlayer.PlayerGui.Overlay:FindFirstChild("Gamepasses") then
            Rayfield:Notify({
                Title = "IDIOT",
                Content = "YOU FUCKING IDIOT YOU ALREADY PRESSED THIS FUCKING BUTTON",
                Duration = 2.5,
            })

            return
        end

        game:GetService("Players").LocalPlayer.PlayerGui.Overlay:FindFirstChild("Gamepasses"):Destroy()
        game:GetService("Players").LocalPlayer.PlayerGui.Overlay:FindFirstChild("LuckyBlockTimer"):Destroy()  
        game:GetService("Players").LocalPlayer.PlayerGui.Overlay:FindFirstChild("OldGamepasses"):Destroy()
    end,
 })







 local CreditsSec = CreditsTab:CreateSection("Credits", true)

 local Label = CreditsTab:CreateLabel("Made by christiandior#6666 or @SirUseful on yt")


